import program from 'commander';
import fs from 'fs';
import logWith from 'log-with';
import path from 'path';
import ConfigReader from 'representy-tool-config-reader';
import pkg from '../package.json';
import Representy from './representy';

const logger = logWith(module);

program
  .version(pkg.version)
  .option('-c, --config [path]', 'Set config path. defaults to ./config.yml')
  .option('-T, --travis <domain>', 'Generate template project for travis')
  .option('-l, --log', 'Log everything')
  .parse(process.argv);

if (program.log) {
  logger.level = 'debug';
}
const ls = (folder) => {
  const dir = path.resolve(process.cwd(), folder);
  logger.debug('Listing files');
  fs.readdirSync(dir).forEach((file) => {
    logger.debug(`${folder}/${file}`);
  });
};

if (program.travis) {
  logger.info('Building Travis project');
  const domain = program.travis;
  const prefixYml = '#this file generated by representy';
  const packageFile =
    {
      name: domain,
      credit: 'Salim KAYABASI <salim.kayabasi@gmail.com>',
      version: '1.0.0',
      scripts: {
        prepublish: 'representy -l',
      },
      dependencies: {
        representy: '^0.0.27',
      },
    };
  fs.writeFileSync('package.json', JSON.stringify(packageFile, null, 2));
  logger.debug('adding package.json file');
  const travis = `${prefixYml}
language: node_js
node_js: stable
cache: yarn

branches:
  except: gh-pages

script: yarn prepublish

deploy:
  provider: pages
  github_token: $GH_TOKEN
  local_dir: build
  skip_cleanup: true
  fqdn: ${domain}
  on:
    branch: master`;

  fs.writeFileSync('.travis.yml', travis);
  logger.debug('adding travis configuration file');
  fs.writeFileSync('config.yml', prefixYml);
  logger.debug('adding empty configuration file for representy');
  logger.info('Done');
  process.exit(0);
}

logger.info('Building your web page');
const env = process.env;
const config = ConfigReader.read(program.config, env);
config.log = program.log;
const representy = new Representy(config);
logger.debug('Building');
representy.build()
  .then(() => {
    if (program.log) {
      ls(config.folder);
    }
    logger.info('Done');
  });
